server:
  port: 8000

eureka:
  client: # eureka 클라이언트 등록
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter  # GlobalFilter 등록
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: user-service
          uri: lb://USER-SERVICE #
          predicates: # 조건절이다.
            - Path=/user-service/** #
        - id: first-service
          uri: lb://MY-FIRST-SERVICE # application 이름을 적는다. discovery service안에 포함되어 있는 인스턴스 이름을 찾겠다.
          predicates: # 조건절이다.
            - Path=/first-service/**  # 사용자가 이걸호출하면 위에 uri로 간다.
          filters:
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-request, first-response-header2
            - CustomFilter  # CustomFilter 등록
        - id: second-service
          uri: lb://MY-SECOND-SERVICE # application 이름을 적는다. discovery service안에 포함되어 있는 인스턴스 이름을 찾겠다.
          predicates: # 조건절이다.
            - Path=/second-service/** # 사용자가 이걸호출하면 위에 uri로 간다.
          filters:
#            - AddRequestHeader=second-request, second-request-header2
#            - AddResponseHeader=second-request, second-response-header2
            - name : CustomFilter  # CustomFilter 등록
            - name : LoggingFilter  # LoggingFilter 등록
              args:
                baseMessage: Hi, there.
                preLogger: true
                postLogger: true
